<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Prompt Generator | Create Perfect AI Prompts</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #6c63ff;
            --secondary: #4a44c9;
            --accent: #42a5f5;
            --light: #f8f9fa;
            --dark: #212529;
            --success: #4ade80;
            --warning: #facc15;
            --danger: #f87171;
            --radius: 12px;
            --shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
            --transition: all 0.3s ease;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #0f172a, #1e293b);
            color: var(--light);
            line-height: 1.6;
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        header {
            text-align: center;
            padding: 40px 20px;
            background: rgba(30, 41, 59, 0.7);
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            margin-bottom: 30px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        h1 {
            font-size: 3.5rem;
            margin-bottom: 10px;
            background: linear-gradient(to right, var(--primary), var(--accent));
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        
        .tagline {
            font-size: 1.4rem;
            font-weight: 300;
            max-width: 700px;
            margin: 0 auto 30px;
            color: #cbd5e1;
        }
        
        .hero-content {
            position: relative;
            z-index: 2;
        }
        
        main {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 40px;
        }
        
        @media (max-width: 768px) {
            main {
                grid-template-columns: 1fr;
            }
        }
        
        .card {
            background: rgba(30, 41, 59, 0.7);
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            padding: 30px;
            transition: var(--transition);
            border: 1px solid rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
        }
        
        .card-title {
            display: flex;
            align-items: center;
            gap: 12px;
            font-size: 1.8rem;
            margin-bottom: 25px;
            color: var(--accent);
            border-bottom: 2px solid rgba(255, 255, 255, 0.08);
            padding-bottom: 15px;
        }
        
        .card-title i {
            background: rgba(66, 165, 245, 0.15);
            width: 50px;
            height: 50px;
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }
        
        .form-group {
            margin-bottom: 25px;
        }
        
        label {
            display: block;
            margin-bottom: 10px;
            font-weight: 600;
            color: #e2e8f0;
            font-size: 1.1rem;
        }
        
        select, input, textarea {
            width: 100%;
            padding: 15px;
            border: 2px solid rgba(255, 255, 255, 0.1);
            border-radius: var(--radius);
            font-size: 1rem;
            transition: var(--transition);
            background: rgba(15, 23, 42, 0.5);
            color: #f1f5f9;
        }
        
        select:focus, input:focus, textarea:focus {
            outline: none;
            border-color: var(--accent);
            box-shadow: 0 0 0 4px rgba(66, 165, 245, 0.25);
        }
        
        textarea {
            min-height: 150px;
            resize: vertical;
            font-size: 0.95rem;
            line-height: 1.7;
        }
        
        button {
            background: linear-gradient(to right, var(--primary), var(--accent));
            color: white;
            border: none;
            padding: 16px 32px;
            font-size: 1.1rem;
            border-radius: var(--radius);
            cursor: pointer;
            transition: var(--transition);
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 10px;
            width: 100%;
            justify-content: center;
        }
        
        button:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(108, 99, 255, 0.4);
        }
        
        button.secondary {
            background: rgba(15, 23, 42, 0.7);
            color: var(--accent);
            border: 2px solid rgba(66, 165, 245, 0.3);
        }
        
        button.secondary:hover {
            background: rgba(30, 41, 59, 0.9);
        }
        
        .button-group {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }
        
        .examples {
            background: rgba(30, 41, 59, 0.7);
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            padding: 30px;
            margin-top: 40px;
            border: 1px solid rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
        }
        
        .examples-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
            margin-top: 25px;
        }
        
        .example-card {
            background: rgba(15, 23, 42, 0.5);
            border-radius: var(--radius);
            padding: 25px;
            border-left: 4px solid var(--primary);
            transition: var(--transition);
            border: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .example-card:hover {
            transform: translateY(-5px);
            background: rgba(30, 41, 59, 0.8);
        }
        
        .example-card h4 {
            color: var(--accent);
            margin-bottom: 15px;
            font-size: 1.3rem;
        }
        
        .example-card p {
            color: #94a3b8;
            margin-bottom: 15px;
            font-size: 0.95rem;
        }
        
        .example-prompt {
            background: rgba(15, 23, 42, 0.7);
            padding: 15px;
            border-radius: 8px;
            font-size: 0.85rem;
            white-space: pre-wrap;
            word-break: break-word;
            margin-top: 10px;
            color: #cbd5e1;
            border: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        footer {
            text-align: center;
            padding: 30px 0;
            color: #94a3b8;
            font-size: 0.95rem;
            margin-top: 50px;
            border-top: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .tooltip {
            position: relative;
            display: inline-block;
            margin-left: 5px;
            color: var(--accent);
            cursor: help;
        }
        
        .tooltip .tooltip-text {
            visibility: hidden;
            width: 300px;
            background: var(--dark);
            color: white;
            text-align: center;
            border-radius: 6px;
            padding: 10px;
            position: absolute;
            z-index: 1;
            bottom: 125%;
            left: 50%;
            transform: translateX(-50%);
            opacity: 0;
            transition: opacity 0.3s;
            font-size: 0.9rem;
            font-weight: normal;
        }
        
        .tooltip:hover .tooltip-text {
            visibility: visible;
            opacity: 1;
        }
        
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 25px;
            border-radius: var(--radius);
            background: var(--success);
            color: white;
            box-shadow: var(--shadow);
            transform: translateX(200%);
            transition: transform 0.3s ease;
            z-index: 1000;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .notification.show {
            transform: translateX(0);
        }
        
        .badge {
            display: inline-block;
            background: var(--accent);
            color: white;
            padding: 3px 8px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            margin-left: 10px;
        }
        
        .ai-tools {
            display: flex;
            justify-content: center;
            gap: 15px;
            flex-wrap: wrap;
            margin-top: 15px;
        }
        
        .ai-tool {
            background: rgba(255, 255, 255, 0.08);
            padding: 8px 15px;
            border-radius: 30px;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 8px;
            border: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .stats-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
            margin-top: 25px;
        }
        
        .stat-card {
            background: rgba(15, 23, 42, 0.5);
            border-radius: var(--radius);
            padding: 20px;
            text-align: center;
            border: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .stat-value {
            font-size: 2.5rem;
            font-weight: 700;
            margin: 10px 0;
            background: linear-gradient(to right, var(--primary), var(--accent));
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        
        .stat-label {
            color: #94a3b8;
            font-size: 1.1rem;
        }
        
        .prompt-history {
            margin-top: 30px;
            max-height: 300px;
            overflow-y: auto;
            padding-right: 10px;
        }
        
        .history-item {
            background: rgba(15, 23, 42, 0.5);
            border-radius: var(--radius);
            padding: 15px;
            margin-bottom: 15px;
            border: 1px solid rgba(255, 255, 255, 0.05);
            transition: var(--transition);
            cursor: pointer;
        }
        
        .history-item:hover {
            background: rgba(30, 41, 59, 0.7);
            transform: translateX(5px);
        }
        
        .history-title {
            font-weight: 600;
            margin-bottom: 8px;
            color: var(--accent);
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .history-preview {
            color: #94a3b8;
            font-size: 0.9rem;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        .advanced-options {
            background: rgba(15, 23, 42, 0.5);
            border-radius: var(--radius);
            padding: 25px;
            margin-top: 25px;
            border: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .option-row {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }
        
        .option-item {
            flex: 1;
            min-width: 200px;
        }
        
        .checkbox-group {
            display: flex;
            gap: 15px;
            align-items: center;
            margin-top: 20px;
        }
        
        .checkbox-label {
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
            font-size: 1rem;
            color: #e2e8f0;
        }
        
        .custom-checkbox {
            width: 22px;
            height: 22px;
            border-radius: 6px;
            background: rgba(15, 23, 42, 0.5);
            border: 2px solid rgba(255, 255, 255, 0.1);
            display: flex;
            align-items: center;
            justify-content: center;
            transition: var(--transition);
        }
        
        .custom-checkbox i {
            opacity: 0;
            transform: scale(0.8);
            transition: var(--transition);
            color: var(--accent);
        }
        
        input[type="checkbox"] {
            display: none;
        }
        
        input[type="checkbox"]:checked + .custom-checkbox {
            background: rgba(66, 165, 245, 0.2);
            border-color: var(--accent);
        }
        
        input[type="checkbox"]:checked + .custom-checkbox i {
            opacity: 1;
            transform: scale(1);
        }
        
        .slider-container {
            margin-top: 10px;
        }
        
        .slider {
            -webkit-appearance: none;
            width: 100%;
            height: 8px;
            border-radius: 4px;
            background: rgba(15, 23, 42, 0.5);
            outline: none;
        }
        
        .slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 22px;
            height: 22px;
            border-radius: 50%;
            background: var(--accent);
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(66, 165, 245, 0.5);
        }
        
        .slider-value {
            text-align: right;
            margin-top: 5px;
            color: var(--accent);
            font-weight: 500;
        }
        
        .tabs {
            display: flex;
            gap: 10px;
            margin-bottom: 25px;
            background: rgba(15, 23, 42, 0.5);
            border-radius: var(--radius);
            padding: 8px;
            border: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .tab {
            padding: 12px 25px;
            border-radius: 12px;
            cursor: pointer;
            transition: var(--transition);
            font-weight: 500;
            text-align: center;
            flex: 1;
        }
        
        .tab.active {
            background: linear-gradient(to right, var(--primary), var(--accent));
            box-shadow: 0 4px 15px rgba(108, 99, 255, 0.3);
        }
        
        .tab-content {
            display: none;
        }
        
        .tab-content.active {
            display: block;
            animation: fadeIn 0.5s ease;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body>
    <div class="notification">
        <i class="fas fa-check-circle"></i>
        <span>Prompt copied to clipboard!</span>
    </div>
    
    <div class="container">
        <header>
            <div class="hero-content">
                <h1>PromptCraft Pro <span class="badge">AI</span></h1>
                <p class="tagline">Generate perfect AI prompts tailored to your profession and tasks</p>
                <div class="ai-tools">
                    <div class="ai-tool"><i class="fab fa-android"></i> ChatGPT</div>
                    <div class="ai-tool"><i class="fas fa-robot"></i> Claude</div>
                    <div class="ai-tool"><i class="fas fa-gem"></i> Gemini</div>
                    <div class="ai-tool"><i class="fas fa-brain"></i> Copilot</div>
                    <div class="ai-tool"><i class="fas fa-magic"></i> Midjourney</div>
                </div>
            </div>
        </header>
        
        <main>
            <div class="card">
                <h2 class="card-title"><i class="fas fa-user-tie"></i> Prompt Generator</h2>
                
                <div class="tabs">
                    <div class="tab active" data-tab="basic">Basic</div>
                    <div class="tab" data-tab="advanced">Advanced</div>
                    <div class="tab" data-tab="examples">Examples</div>
                </div>
                
                <div class="tab-content active" id="basic-tab">
                    <div class="form-group">
                        <label for="profession">Your Profession/Role</label>
                        <select id="profession">
                            <option value="">Select your profession</option>
                            <option value="developer">Developer/Programmer</option>
                            <option value="writer">Content Writer/Copywriter</option>
                            <option value="marketer">Marketing Specialist</option>
                            <option value="designer">Graphic Designer</option>
                            <option value="manager">Project Manager</option>
                            <option value="teacher">Educator/Teacher</option>
                            <option value="student">Student/Researcher</option>
                            <option value="entrepreneur">Entrepreneur/Startup Founder</option>
                            <option value="other">Other</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="task">
                            Specific Task You Need Help With 
                            <span class="tooltip">
                                <i class="fas fa-info-circle"></i>
                                <span class="tooltip-text">Be specific about what you want the AI to do for you</span>
                            </span>
                        </label>
                        <select id="task">
                            <option value="">Select a task category</option>
                            <option value="writing">Writing/Content Creation</option>
                            <option value="coding">Coding/Programming</option>
                            <option value="design">Design/Visual Creation</option>
                            <option value="analysis">Data Analysis</option>
                            <option value="planning">Planning/Strategy</option>
                            <option value="learning">Learning/Research</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="details">Task Details & Requirements</label>
                        <textarea id="details" placeholder="Describe exactly what you need. Include details like:
- Target audience
- Desired tone/style
- Key points to include
- Format requirements
- Any other specifications"></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="tone">
                            Desired Tone/Style 
                            <span class="tooltip">
                                <i class="fas fa-info-circle"></i>
                                <span class="tooltip-text">How formal or casual should the output be?</span>
                            </span>
                        </label>
                        <select id="tone">
                            <option value="">Select tone</option>
                            <option value="professional">Professional/Formal</option>
                            <option value="casual">Casual/Friendly</option>
                            <option value="persuasive">Persuasive/Sales-oriented</option>
                            <option value="technical">Technical/Detailed</option>
                            <option value="creative">Creative/Imaginative</option>
                            <option value="educational">Educational/Informative</option>
                        </select>
                    </div>
                    
                    <div class="advanced-options">
                        <h3 style="color: var(--accent); margin-bottom: 20px; display: flex; align-items: center; gap: 12px;">
                            <i class="fas fa-cogs"></i> Advanced Options
                        </h3>
                        
                        <div class="option-row">
                            <div class="option-item">
                                <label for="format">Output Format</label>
                                <select id="format">
                                    <option value="paragraph">Paragraph</option>
                                    <option value="bullet">Bullet Points</option>
                                    <option value="markdown">Markdown</option>
                                    <option value="table">Table Format</option>
                                    <option value="json">JSON Format</option>
                                    <option value="code">Code Block</option>
                                </select>
                            </div>
                            
                            <div class="option-item">
                                <label for="length">Response Length</label>
                                <input type="range" min="1" max="5" value="3" class="slider" id="length">
                                <div class="slider-value" id="length-value">Medium</div>
                            </div>
                        </div>
                        
                        <div class="checkbox-group">
                            <label class="checkbox-label">
                                <input type="checkbox" id="chain-of-thought">
                                <span class="custom-checkbox"><i class="fas fa-check"></i></span>
                                Chain of Thought Reasoning
                            </label>
                            
                            <label class="checkbox-label">
                                <input type="checkbox" id="examples-included">
                                <span class="custom-checkbox"><i class="fas fa-check"></i></span>
                                Include Examples
                            </label>
                            
                            <label class="checkbox-label">
                                <input type="checkbox" id="step-by-step">
                                <span class="custom-checkbox"><i class="fas fa-check"></i></span>
                                Step-by-Step Process
                            </label>
                        </div>
                    </div>
                    
                    <button id="generate-btn">
                        <i class="fas fa-bolt"></i> Generate AI Prompt
                    </button>
                </div>
                
                <div class="tab-content" id="advanced-tab">
                    <div class="form-group">
                        <label for="persona">AI Persona/Role</label>
                        <input type="text" id="persona" placeholder="Example: Expert Python Developer, Marketing Guru, Creative Writer...">
                    </div>
                    
                    <div class="form-group">
                        <label for="constraints">Constraints & Limitations</label>
                        <textarea id="constraints" placeholder="Example:
- Must include at least 3 statistics
- Avoid technical jargon
- Limit to 300 words
- Use simple language
- No markdown formatting"></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="examples">Provide Examples (Few-Shot Prompting)</label>
                        <textarea id="examples-text" placeholder="Provide examples of what you want:
Example 1: [Input] -> [Output]
Example 2: [Input] -> [Output]"></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="context">Additional Context</label>
                        <textarea id="context" placeholder="Any background information, data, or context that might help the AI..."></textarea>
                    </div>
                    
                    <button id="generate-advanced-btn">
                        <i class="fas fa-stars"></i> Generate Advanced Prompt
                    </button>
                </div>
                
                <div class="tab-content" id="examples-tab">
                    <div class="examples-grid">
                        <div class="example-card">
                            <h4><i class="fas fa-code"></i> Developer Prompt</h4>
                            <p><strong>Task:</strong> Debug Python script</p>
                            <div class="example-prompt">Act as a senior Python developer. Analyze the following code that's returning a 'TypeError' and provide:
1. Explanation of the error
2. Fixed code
3. Brief explanation of the fix
4. Prevention tips for similar errors</div>
                            <button class="secondary" style="margin-top: 15px;" data-example="developer">Use This Example</button>
                        </div>
                        
                        <div class="example-card">
                            <h4><i class="fas fa-pen"></i> Writer Prompt</h4>
                            <p><strong>Task:</strong> Blog post outline</p>
                            <div class="example-prompt">Act as a professional content writer. Create a detailed outline for a blog post titled "The Future of AI in Healthcare". Include:
- Engaging introduction
- 5 key sections with subheadings
- 3 statistics per section
- Call-to-action conclusion
- 5 SEO keywords to target</div>
                            <button class="secondary" style="margin-top: 15px;" data-example="writer">Use This Example</button>
                        </div>
                        
                        <div class="example-card">
                            <h4><i class="fas fa-chart-line"></i> Marketer Prompt</h4>
                            <p><strong>Task:</strong> Marketing strategy</p>
                            <div class="example-prompt">Act as a digital marketing expert. Create a 30-day social media strategy for a new eco-friendly product launch. Include:
- Platform selection (3 platforms)
- Content themes for each week
- Engagement tactics
- KPI tracking methods
- Budget allocation recommendations</div>
                            <button class="secondary" style="margin-top: 15px;" data-example="marketer">Use This Example</button>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="card">
                <h2 class="card-title"><i class="fas fa-file-alt"></i> Generated Prompt</h2>
                
                <div class="form-group">
                    <label for="output">Your Custom AI Prompt</label>
                    <textarea id="output" readonly>Fill out the form to generate your custom AI prompt...</textarea>
                </div>
                
                <div class="button-group">
                    <button id="copy-btn" class="secondary">
                        <i class="far fa-copy"></i> Copy to Clipboard
                    </button>
                    <button id="save-btn" class="secondary">
                        <i class="far fa-save"></i> Save Prompt
                    </button>
                    <button id="reset-btn" class="secondary">
                        <i class="fas fa-redo"></i> Reset Form
                    </button>
                </div>
                
                <div class="stats-container">
                    <div class="stat-card">
                        <div class="stat-value" id="prompt-count">0</div>
                        <div class="stat-label">Prompts Generated</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" id="char-count">0</div>
                        <div class="stat-label">Characters Saved</div>
                    </div>
                </div>
                
                <div class="prompt-history">
                    <h3 style="color: var(--accent); margin-bottom: 20px; display: flex; align-items: center; gap: 12px;">
                        <i class="fas fa-history"></i> Prompt History
                    </h3>
                    <div id="history-list">
                        <!-- History items will be added here -->
                    </div>
                </div>
                
                <div class="instructions" style="margin-top: 30px; background: rgba(15, 23, 42, 0.5); padding: 20px; border-radius: var(--radius);">
                    <h3 style="margin-bottom: 15px; color: var(--accent);">How to Use This Prompt</h3>
                    <ol style="padding-left: 20px;">
                        <li>Click "Copy to Clipboard"</li>
                        <li>Open your preferred AI tool (ChatGPT, Claude, Gemini, etc.)</li>
                        <li>Paste the prompt into the chat</li>
                        <li>Add any additional context after the prompt if needed</li>
                        <li>Submit and get your customized results!</li>
                    </ol>
                </div>
            </div>
        </main>
        
        <div class="examples">
            <h2 style="text-align: center; margin-bottom: 20px; color: var(--accent);">Prompt Examples for Different AI Tools</h2>
            <p style="text-align: center; max-width: 800px; margin: 0 auto 30px; color: #94a3b8;">See how to optimize prompts for different AI platforms</p>
            
            <div class="examples-grid">
                <div class="example-card">
                    <h4><i class="fab fa-android"></i> ChatGPT Prompt</h4>
                    <div class="example-prompt">You are an expert Python developer with 15 years of experience. 
Explain the following concept: [CONCEPT] 
Structure your response:
1. Simple definition
2. Practical example
3. Common use cases
4. Best practices
5. Potential pitfalls to avoid
Use clear language suitable for intermediate developers.</div>
                </div>
                
                <div class="example-card">
                    <h4><i class="fas fa-robot"></i> Claude Prompt</h4>
                    <div class="example-prompt">[ROLE]: Expert market analyst specializing in tech startups
[TASK]: Analyze the following business model: [DESCRIPTION]
[REQUIREMENTS]:
- SWOT analysis (4 points each)
- 3 growth strategies
- Market size estimation
- Competitive landscape overview
- Monetization recommendations
[OUTPUT]: Detailed report with clear sections</div>
                </div>
                
                <div class="example-card">
                    <h4><i class="fas fa-gem"></i> Gemini Prompt</h4>
                    <div class="example-prompt">Act as a professional science communicator. Explain quantum computing to a high school audience. Requirements:
- Use simple analogies
- Limit technical jargon
- Focus on practical implications
- Include 2 visual description suggestions
- Keep under 500 words
Structure: Introduction, Core Concepts, Real-World Applications, Future Outlook</div>
                </div>
            </div>
        </div>
        
        <footer>
            <p>Made with ❤️ by PromptCraft | AI Prompt Generator Tool</p>
            <p>Simply describe your task, and we'll create the perfect prompt for any AI tool</p>
        </footer>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const generateBtn = document.getElementById('generate-btn');
            const generateAdvancedBtn = document.getElementById('generate-advanced-btn');
            const copyBtn = document.getElementById('copy-btn');
            const saveBtn = document.getElementById('save-btn');
            const resetBtn = document.getElementById('reset-btn');
            const output = document.getElementById('output');
            const notification = document.querySelector('.notification');
            const lengthSlider = document.getElementById('length');
            const lengthValue = document.getElementById('length-value');
            const tabs = document.querySelectorAll('.tab');
            const tabContents = document.querySelectorAll('.tab-content');
            const historyList = document.getElementById('history-list');
            const promptCount = document.getElementById('prompt-count');
            const charCount = document.getElementById('char-count');
            const exampleBtns = document.querySelectorAll('[data-example]');
            
            // Initialize variables
            let promptCounter = 0;
            let charCounter = 0;
            let history = [];
            
            // Profession examples mapping
            const professionExamples = {
                'developer': 'Senior Python Developer',
                'writer': 'Content Marketing Specialist',
                'marketer': 'Digital Marketing Manager',
                'designer': 'UX/UI Designer',
                'manager': 'Agile Project Manager',
                'teacher': 'High School Science Teacher',
                'student': 'Computer Science Student',
                'entrepreneur': 'Startup Founder',
                'other': 'Professional in your field'
            };
            
            // Task examples mapping
            const taskExamples = {
                'writing': 'Create compelling marketing copy',
                'coding': 'Debug this Python script',
                'design': 'Design a logo concept',
                'analysis': 'Analyze this sales data',
                'planning': 'Create a project timeline',
                'learning': 'Explain machine learning concepts'
            };
            
            // Tone examples mapping
            const toneExamples = {
                'professional': 'professional and formal',
                'casual': 'casual and friendly',
                'persuasive': 'persuasive and sales-oriented',
                'technical': 'technical and detailed',
                'creative': 'creative and imaginative',
                'educational': 'educational and informative'
            };
            
            // Initialize length slider
            lengthSlider.addEventListener('input', function() {
                const value = parseInt(this.value);
                const labels = ['Very Short', 'Short', 'Medium', 'Long', 'Very Long'];
                lengthValue.textContent = labels[value - 1];
            });
            
            // Tab functionality
            tabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    const tabId = this.getAttribute('data-tab');
                    
                    // Remove active class from all tabs and contents
                    tabs.forEach(t => t.classList.remove('active'));
                    tabContents.forEach(c => c.classList.remove('active'));
                    
                    // Add active class to current tab and content
                    this.classList.add('active');
                    document.getElementById(`${tabId}-tab`).classList.add('active');
                });
            });
            
            // Example loading functionality
            exampleBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const exampleType = this.getAttribute('data-example');
                    loadExample(exampleType);
                    
                    // Switch to basic tab
                    tabs.forEach(t => t.classList.remove('active'));
                    tabContents.forEach(c => c.classList.remove('active'));
                    document.querySelector('.tab').classList.add('active');
                    document.getElementById('basic-tab').classList.add('active');
                });
            });
            
            // Generate prompt button
            generateBtn.addEventListener('click', function() {
                generatePrompt('basic');
            });
            
            // Generate advanced prompt button
            generateAdvancedBtn.addEventListener('click', function() {
                generatePrompt('advanced');
            });
            
            // Copy button
            copyBtn.addEventListener('click', function() {
                if (output.value === '' || output.value.includes('Fill out the form')) {
                    alert('Please generate a prompt first');
                    return;
                }
                
                output.select();
                document.execCommand('copy');
                
                // Show notification
                notification.classList.add('show');
                setTimeout(() => {
                    notification.classList.remove('show');
                }, 3000);
            });
            
            // Save button
            saveBtn.addEventListener('click', function() {
                if (output.value === '' || output.value.includes('Fill out the form')) {
                    alert('Please generate a prompt first');
                    return;
                }
                
                const profession = document.getElementById('profession').value || 'custom';
                const title = `Prompt for ${getProfessionName(profession)}`;
                
                // Save to history
                history.unshift({
                    title: title,
                    content: output.value,
                    timestamp: new Date().toLocaleString()
                });
                
                // Update history display
                updateHistory();
                
                showNotification('Prompt saved to history!');
            });
            
            // Reset button
            resetBtn.addEventListener('click', function() {
                document.getElementById('profession').value = '';
                document.getElementById('task').value = '';
                document.getElementById('details').value = '';
                document.getElementById('tone').value = '';
                document.getElementById('format').value = 'paragraph';
                document.getElementById('length').value = '3';
                document.getElementById('length-value').textContent = 'Medium';
                document.getElementById('chain-of-thought').checked = false;
                document.getElementById('examples-included').checked = false;
                document.getElementById('step-by-step').checked = false;
                document.getElementById('persona').value = '';
                document.getElementById('constraints').value = '';
                document.getElementById('examples-text').value = '';
                document.getElementById('context').value = '';
                output.value = 'Fill out the form to generate your custom AI prompt...';
                
                // Switch to basic tab
                tabs.forEach(t => t.classList.remove('active'));
                tabContents.forEach(c => c.classList.remove('active'));
                document.querySelector('.tab').classList.add('active');
                document.getElementById('basic-tab').classList.add('active');
            });
            
            // Generate prompt function
            function generatePrompt(type) {
                let profession, task, details, tone;
                
                if (type === 'basic') {
                    profession = document.getElementById('profession').value;
                    task = document.getElementById('task').value;
                    details = document.getElementById('details').value;
                    tone = document.getElementById('tone').value;
                    
                    if (!profession || !task || !details) {
                        alert('Please fill in all required fields');
                        return;
                    }
                }
                
                // For advanced tab
                const persona = document.getElementById('persona').value;
                const constraints = document.getElementById('constraints').value;
                const examples = document.getElementById('examples-text').value;
                const context = document.getElementById('context').value;
                
                // Get advanced options
                const format = document.getElementById('format').value;
                const length = document.getElementById('length').value;
                const chainOfThought = document.getElementById('chain-of-thought').checked;
                const includeExamples = document.getElementById('examples-included').checked;
                const stepByStep = document.getElementById('step-by-step').checked;
                
                // Generate the prompt
                let prompt;
                
                if (type === 'advanced' && persona) {
                    prompt = `[ROLE]: ${persona}\n\n`;
                    if (context) prompt += `[CONTEXT]: ${context}\n\n`;
                    if (details) prompt += `[TASK]: ${details}\n\n`;
                    if (examples) prompt += `[EXAMPLES]:\n${examples}\n\n`;
                    if (constraints) prompt += `[CONSTRAINTS]:\n${constraints}\n\n`;
                    prompt += `[RESPONSE REQUIREMENTS]:\n`;
                } else {
                    const professionText = getProfessionName(profession);
                    const taskText = getTaskDescription(task);
                    
                    prompt = `Act as an ${professionText} with extensive experience. Your task is to ${taskText} based on the following requirements:\n\n`;
                    prompt += `User Requirements:\n${details}\n\n`;
                }
                
                // Add tone if specified
                if (tone) {
                    prompt += `- Tone: ${getToneDescription(tone)}\n`;
                }
                
                // Add format
                prompt += `- Format: ${getFormatDescription(format)}\n`;
                
                // Add length
                prompt += `- Length: ${getLengthDescription(length)}\n`;
                
                // Add advanced options
                if (chainOfThought) {
                    prompt += `- Include chain of thought reasoning\n`;
                }
                if (includeExamples) {
                    prompt += `- Include relevant examples\n`;
                }
                if (stepByStep) {
                    prompt += `- Present solution in step-by-step format\n`;
                }
                
                // Add structure
                prompt += `\nStructure your response as follows:\n`;
                prompt += `1. Overview of approach\n`;
                prompt += `2. Detailed implementation\n`;
                prompt += `3. Final output\n`;
                prompt += `4. Additional recommendations\n\n`;
                
                prompt += `Ensure your response is comprehensive, accurate, and adheres to all specified requirements.`;
                
                // Set output
                output.value = prompt;
                
                // Update stats
                promptCounter++;
                charCounter += prompt.length;
                promptCount.textContent = promptCounter;
                charCount.textContent = charCounter.toLocaleString();
                
                showNotification('Prompt generated successfully!');
            }
            
            // Helper functions
            function getProfessionName(profession) {
                const professions = {
                    'developer': 'Senior Software Developer',
                    'writer': 'Professional Content Writer',
                    'marketer': 'Digital Marketing Expert',
                    'designer': 'Creative Designer',
                    'manager': 'Experienced Project Manager',
                    'teacher': 'Educator with 10+ years experience',
                    'student': 'Research Specialist',
                    'entrepreneur': 'Startup Founder',
                    'other': 'expert in your field'
                };
                return professions[profession] || 'expert professional';
            }
            
            function getTaskDescription(task) {
                const tasks = {
                    'writing': 'create high-quality written content',
                    'coding': 'develop or debug code',
                    'design': 'create visual designs',
                    'analysis': 'analyze and interpret data',
                    'planning': 'develop strategic plans',
                    'learning': 'research and explain concepts'
                };
                return tasks[task] || 'complete the specified task';
            }
            
            function getToneDescription(tone) {
                const tones = {
                    'professional': 'Professional and formal',
                    'casual': 'Casual and friendly',
                    'persuasive': 'Persuasive and sales-oriented',
                    'technical': 'Technical and detailed',
                    'creative': 'Creative and imaginative',
                    'educational': 'Educational and informative'
                };
                return tones[tone] || 'appropriate for the context';
            }
            
            function getFormatDescription(format) {
                const formats = {
                    'paragraph': 'Well-structured paragraphs',
                    'bullet': 'Bullet points',
                    'markdown': 'Markdown formatted',
                    'table': 'Table format',
                    'json': 'JSON structure',
                    'code': 'Code block'
                };
                return formats[format] || 'Paragraphs';
            }
            
            function getLengthDescription(length) {
                const lengths = {
                    1: 'Very short (1-2 paragraphs)',
                    2: 'Short (3-4 paragraphs)',
                    3: 'Medium (5-7 paragraphs)',
                    4: 'Long (8-10 paragraphs)',
                    5: 'Very long (detailed report)'
                };
                return lengths[length] || 'Medium length';
            }
            
            function showNotification(message) {
                notification.querySelector('span').textContent = message;
                notification.classList.add('show');
                setTimeout(() => {
                    notification.classList.remove('show');
                }, 3000);
            }
            
            function loadExample(type) {
                if (type === 'developer') {
                    document.getElementById('profession').value = 'developer';
                    document.getElementById('task').value = 'coding';
                    document.getElementById('details').value = 'Debug the following Python code that is returning a "TypeError: unsupported operand type(s)" error. Explain the issue and provide a fixed version.';
                    document.getElementById('tone').value = 'technical';
                } else if (type === 'writer') {
                    document.getElementById('profession').value = 'writer';
                    document.getElementById('task').value = 'writing';
                    document.getElementById('details').value = 'Create a comprehensive blog post outline about "The Impact of AI on Content Creation". Include at least 5 sections with subheadings, 3 key points per section, and suggested statistics to include.';
                    document.getElementById('tone').value = 'educational';
                } else if (type === 'marketer') {
                    document.getElementById('profession').value = 'marketer';
                    document.getElementById('task').value = 'planning';
                    document.getElementById('details').value = 'Develop a 30-day social media marketing plan for a new eco-friendly water bottle. Include platform selection, content themes, engagement strategies, and KPI tracking methods.';
                    document.getElementById('tone').value = 'persuasive';
                }
                
                // Auto-generate the prompt
                setTimeout(() => generatePrompt('basic'), 500);
            }
            
            function updateHistory() {
                historyList.innerHTML = '';
                
                // Only keep last 5 items
                if (history.length > 5) history = history.slice(0, 5);
                
                history.forEach((item, index) => {
                    const historyItem = document.createElement('div');
                    historyItem.className = 'history-item';
                    
                    // Truncate content for preview
                    const preview = item.content.length > 100 
                        ? item.content.substring(0, 100) + '...' 
                        : item.content;
                    
                    historyItem.innerHTML = `
                        <div class="history-title">
                            <i class="fas fa-file-alt"></i>
                            ${item.title}
                        </div>
                        <div class="history-preview">${preview}</div>
                        <div style="color: #64748b; font-size: 0.85rem; margin-top: 8px;">${item.timestamp}</div>
                    `;
                    
                    historyItem.addEventListener('click', function() {
                        output.value = item.content;
                        showNotification('Prompt loaded from history');
                    });
                    
                    historyList.appendChild(historyItem);
                });
                
                if (history.length === 0) {
                    historyList.innerHTML = '<div style="text-align: center; padding: 20px; color: #64748b;">No saved prompts yet</div>';
                }
            }
            
            // Initialize history
            updateHistory();
        });
    </script>
</body>
</html>